/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

package com.twilio.rest.video.v1.room.participant;

import com.twilio.base.Updater;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;

public class SubscribedTrackUpdater extends Updater<SubscribedTrack> {
    private final String pathRoomSid;
    private final String pathSubscriberSid;
    private String track;
    private String publisher;
    private SubscribedTrack.Kind kind;
    private SubscribedTrack.Status status;

    /**
     * Construct a new SubscribedTrackUpdater.
     * 
     * @param pathRoomSid The room_sid
     * @param pathSubscriberSid The subscriber_sid
     */
    public SubscribedTrackUpdater(final String pathRoomSid, 
                                  final String pathSubscriberSid) {
        this.pathRoomSid = pathRoomSid;
        this.pathSubscriberSid = pathSubscriberSid;
    }

    /**
     * The track.
     * 
     * @param track The track
     * @return this
     */
    public SubscribedTrackUpdater setTrack(final String track) {
        this.track = track;
        return this;
    }

    /**
     * The publisher.
     * 
     * @param publisher The publisher
     * @return this
     */
    public SubscribedTrackUpdater setPublisher(final String publisher) {
        this.publisher = publisher;
        return this;
    }

    /**
     * The kind.
     * 
     * @param kind The kind
     * @return this
     */
    public SubscribedTrackUpdater setKind(final SubscribedTrack.Kind kind) {
        this.kind = kind;
        return this;
    }

    /**
     * The status.
     * 
     * @param status The status
     * @return this
     */
    public SubscribedTrackUpdater setStatus(final SubscribedTrack.Status status) {
        this.status = status;
        return this;
    }

    /**
     * Make the request to the Twilio API to perform the update.
     * 
     * @param client TwilioRestClient with which to make the request
     * @return Updated SubscribedTrack
     */
    @Override
    @SuppressWarnings("checkstyle:linelength")
    public SubscribedTrack update(final TwilioRestClient client) {
        Request request = new Request(
            HttpMethod.POST,
            Domains.VIDEO.toString(),
            "/v1/Rooms/" + this.pathRoomSid + "/Participants/" + this.pathSubscriberSid + "/SubscribedTracks",
            client.getRegion()
        );

        addPostParams(request);
        Response response = client.request(request);

        if (response == null) {
            throw new ApiConnectionException("SubscribedTrack update failed: Unable to connect to server");
        } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {
            RestException restException = RestException.fromJson(response.getStream(), client.getObjectMapper());
            if (restException == null) {
                throw new ApiException("Server Error, no content");
            }

            throw new ApiException(
                restException.getMessage(),
                restException.getCode(),
                restException.getMoreInfo(),
                restException.getStatus(),
                null
            );
        }

        return SubscribedTrack.fromJson(response.getStream(), client.getObjectMapper());
    }

    /**
     * Add the requested post parameters to the Request.
     * 
     * @param request Request to add post params to
     */
    private void addPostParams(final Request request) {
        if (track != null) {
            request.addPostParam("Track", track.toString());
        }

        if (publisher != null) {
            request.addPostParam("Publisher", publisher.toString());
        }

        if (kind != null) {
            request.addPostParam("Kind", kind.toString());
        }

        if (status != null) {
            request.addPostParam("Status", status.toString());
        }
    }
}